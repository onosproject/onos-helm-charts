apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "onos-config.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
     {{- include "onos-config.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      name: {{ template "onos-config.fullname" . }}
      app: onos
      type: config
      resource: {{ template "onos-config.fullname" . }}
      {{- include "onos-config.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        name: {{ template "onos-config.fullname" . }}
        app: onos
        type: config
        resource: {{ template "onos-config.fullname" . }}
        {{- include "onos-config.selectorLabels" . | nindent 8 }}
      annotations:
        registry.config.onosproject.org/inject: "true"
        registry.config.onosproject.org/name: { { template "onos-config.fullname" . } }
        registry.config.onosproject.org/path: /etc/onos/plugins
        plugin.config.onosproject.org/api-version: v0.1.0
        plugin.config.onosproject.org/go-mod-target: github.com/onosproject/onos-config
        plugin.config.onosproject.org/go-mod-replace: github.com/kuujo/onos-config@6cdca48
        {{- range $key, $value := .Values.annotations }}
        {{ $key }}: {{ $value }}
        {{- end }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ include "onos-config.imagename" . | quote }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            # *_NAMESPACE and *_NAME environment variables are recognized by onos-lib-go utilities.
            # These variables should always be defined.
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SERVICE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: OIDC_SERVER_URL
              value: {{ .Values.openidc.issuer }}
            - name: SERVICE_NAME
              value: {{ template "onos-config.fullname" . }}
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          args:
            - "-caPath=/etc/onos/certs/tls.cacrt"
            - "-keyPath=/etc/onos/certs/tls.key"
            - "-certPath=/etc/onos/certs/tls.crt"
            {{- if .Values.topoEndpoint }}
            - {{ printf "-topoEndpoint=%s" .Values.topoEndpoint }}
            {{- end }}
          ports:
            - name: grpc
              containerPort: 5150
            # Expose the debug port for debugging
            {{- if .Values.debug }}
            - name: debug
              containerPort: 40000
              protocol: TCP
            {{- end }}
          startupProbe:
            tcpSocket:
              port: 5150
            periodSeconds: 5
            failureThreshold: 60
          readinessProbe:
            tcpSocket:
              port: 5150
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 5150
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - name: config
              mountPath: /etc/onos/config
              readOnly: true
            - name: secret
              mountPath: /etc/onos/certs
              readOnly: true
          # Enable ptrace for debugging
          securityContext:
            {{- if .Values.debug }}
            capabilities:
              add:
                - SYS_PTRACE
            {{- end }}
      # Mount volumes
      volumes:
        - name: config
          configMap:
            name: {{ template "onos-config.fullname" . }}-config
        - name: secret
          secret:
            secretName: {{ template "onos-config.fullname" . }}-secret
    {{- with .Values.nodeSelector }}
    nodeSelector:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
    affinity:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
    tolerations:
      {{- toYaml . | nindent 8 }}
    {{- end }}
