# Default values for all ÂµONOS Helm charts.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  fullnameOverride: "onos"
  nameOverride: ""

import:
  onos-topo:
    enabled: true

openldap:
  env:
    LDAP_ORGANISATION: 'OpenNetworking Foundation'
    LDAP_DOMAIN: opennetworking.org
  tls:
    enabled: false
  persistence:
    enabled: false
  adminPassword: password
  configPassword: password
  logLevel: debug
  customLdifFiles:
    usersAndGroupsContainers.ldif: |-
      dn: cn=groups,dc=opennetworking,dc=org
      cn: groups
      objectclass: organizationalRole
      objectclass: top

      dn: cn=users,dc=opennetworking,dc=org
      cn: users
      objectclass: organizationalRole
      objectclass: top

      # Test user (password is 'password')
      dn: cn=Test User,cn=users,dc=opennetworking,dc=org
      cn: Test User
      givenname: Test
      homedirectory: /home/users/tuser
      mail: test@opennetworking.org
      gidNumber: 500
      objectclass: inetOrgPerson
      objectclass: posixAccount
      objectclass: top
      sn: User
      uid: tuser
      uidnumber: 1000
      userpassword: {MD5}X03MO1qnZdYdgyfeuILPmQ==

      # Test user 1 (password is 'password')
      dn: cn=Test One,cn=users,dc=opennetworking,dc=org
      cn: Test One
      givenname: Test
      homedirectory: /home/users/tuser1
      mail: test1@opennetworking.org
      gidNumber: 500
      objectclass: inetOrgPerson
      objectclass: posixAccount
      objectclass: top
      sn: One
      uid: tuser1
      uidnumber: 1001
      userpassword: {MD5}X03MO1qnZdYdgyfeuILPmQ==

      # Test user 2 (password is 'password')
      dn: cn=Test Two,cn=users,dc=opennetworking,dc=org
      cn: Test Two
      givenname: Test
      homedirectory: /home/users/tuser2
      mail: test2@opennetworking.org
      gidNumber: 500
      objectclass: inetOrgPerson
      objectclass: posixAccount
      objectclass: top
      sn: Two
      uid: tuser2
      uidnumber: 1002
      userpassword: {MD5}X03MO1qnZdYdgyfeuILPmQ==

      dn: cn=testGroup,cn=groups,dc=opennetworking,dc=org
      cn: testGroup
      gidnumber: 500
      memberUid: tuser
      memberUid: tuser1
      memberUid: tuser2
      objectclass: posixGroup
      objectclass: top

      dn: cn=secondGroup,cn=groups,dc=opennetworking,dc=org
      cn: secondGroup
      gidnumber: 502
      memberUid: tuser
      memberUid: tuser1
      objectclass: posixGroup
      objectclass: top

      dn: cn=thirdGroup,cn=groups,dc=opennetworking,dc=org
      cn: thirdGroup
      gidnumber: 503
      memberUid: tuser1
      memberUid: tuser2
      objectclass: posixGroup
      objectclass: top

dex:
  ports:
    grpc:
      containerPort: 5150

  image: dexidp/dex
  imageTag: v2.27.0

  config:
    issuer: 'http://dex:32000'

    web:
      allowedOrigins: ['*']

    staticClients:
      - id: onos-gui
        redirectURIs:
          - 'http://localhost:4200'
          - 'http://localhost:8182'
        name: 'ONOS GUI'
        secret: ZXhhbXBsZS1hcHAtc2VjcmV0

      - id: example-app
        redirectURIs:
          - 'http://127.0.0.1:5555/callback'
        name: 'Example App'
        secret: ZXhhbXBsZS1hcHAtc2VjcmV0

      - id: aether-roc-gui
        redirectURIs:
          - 'http://localhost:4200'
          - 'http://localhost:8183'
          - 'https://aether-roc-gui.opennetworking.org'
        name: 'Aether ROC GUI'
        secret: YWV0aGVyIHJvY2tzCg==

    frontend:
      issuer: Aether
      logoURL: https://www.opennetworking.org/wp-content/uploads/2020/02/aether-logo.png

    grpc:
      address: 0.0.0.0

    connectors:
      - type: ldap
        # Required field for connector id.
        id: ldap
        # Required field for connector name.
        name: Aether ROC LDAP
        config:
          # Host and optional port of the LDAP server in the form "host:port".
          # If the port is not supplied, it will be guessed based on "insecureNoSSL",
          # and "startTLS" flags. 389 for insecure or StartTLS connections, 636
          # otherwise.
          host: dex-ldap-umbrella-openldap:389

          # Following field is required if the LDAP host is not using TLS (port 389).
          # Because this option inherently leaks passwords to anyone on the same network
          # as dex, THIS OPTION MAY BE REMOVED WITHOUT WARNING IN A FUTURE RELEASE.
          #
          insecureNoSSL: true

          # If a custom certificate isn't provide, this option can be used to turn on
          # TLS certificate checks. As noted, it is insecure and shouldn't be used outside
          # of explorative phases.
          #
          # insecureSkipVerify: true

          # When connecting to the server, connect using the ldap:// protocol then issue
          # a StartTLS command. If unspecified, connections will use the ldaps:// protocol
          #
          startTLS: false

          # Path to a trusted root certificate file. Default: use the host's root CA.
          #rootCA: /etc/dex/ldap.ca

          # A raw certificate file can also be provided inline.
          # rootCAData: ( base64 encoded PEM file )

          # The DN and password for an application service account. The connector uses
          # these credentials to search for users and groups. Not required if the LDAP
          # server provides access for anonymous auth.
          # Please note that if the bind password contains a `$`, it has to be saved in an
          # environment variable which should be given as the value to `bindPW`.
          bindDN: cn=admin,dc=opennetworking,dc=org
          bindPW: password
          usernamePrompt: Email

          # User search maps a username and password entered by a user to a LDAP entry.
          userSearch:
            # BaseDN to start the search from. It will translate to the query
            # "(&(objectClass=person)(uid=<username>))".
            baseDN: cn=users,dc=opennetworking,dc=org
            # Optional filter to apply when searching the directory.
            filter: "(objectClass=inetOrgPerson)"

            # username attribute used for comparing user entries. This will be translated
            # and combined with the other filter as "(<attr>=<username>)".
            username: mail
            # The following three fields are direct mappings of attributes on the user entry.
            # String representation of the user.
            idAttr: uid
            # Required. Attribute to map to Email.
            emailAttr: mail
            # Maps to display name of users. No default value.
            nameAttr: cn

          # Group search queries for groups given a user entry.
          groupSearch:
            # BaseDN to start the search from. It will translate to the query
            # "(&(objectClass=group)(member=<user uid>))".
            baseDN: cn=groups,dc=opennetworking,dc=org
            # Optional filter to apply when searching the directory.
            filter: "(objectClass=posixGroup)"

            # Following list contains field pairs that are used to match a user to a group. It adds an additional
            # requirement to the filter that an attribute in the group must match the user's
            # attribute value.
            userMatchers:
              - userAttr: uid
                groupAttr: memberUid

            # Represents group name.
            nameAttr: cn

phpldapadmin:
  service:
    type: ClusterIP

  env:
    PHPLDAPADMIN_LDAP_HOSTS: "#PYTHON2BASH:[{'dex-ldap-umbrella-openldap': [{'server': [{'tls': False}]}, {'login': [{'bind_id': 'cn=admin,dc=opennetworking,dc=org'}]}]}]"
      # - ldap-openldap.default.svc.cluster.local:
      #   - server:
      #     - tls: false
    #   - login:
    #     - bind_id: cn=admin,dc=opennetworking,dc=org