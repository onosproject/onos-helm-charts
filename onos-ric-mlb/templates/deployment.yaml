apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "onos-ric-mlb.fullname" . }}
  labels:
    {{- include "onos-ric-mlb.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      name: {{ template "onos-ric-mlb.fullname" . }}
      app: onos
      type: mlb
      resource: {{ template "onos-ric-mlb.fullname" . }}
      {{- include "onos-ric-mlb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        name: {{ template "onos-ric-mlb.fullname" . }}
        app: onos
        type: mlb
        resource: {{ template "onos-ric-mlb.fullname" . }}
        {{- include "onos-ric-mlb.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: onos-ric-mlb
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: ric-mlb-depcheck
          image: {{ .Values.image.depCheck | quote }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsUser: 0
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: PATH
              value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/
            - name: COMMAND
              value: "echo done"
            - name: DEPENDENCY_POD_JSON
              value: '[{"labels": {"name": "onos-ric"}, "requireSameNode": false}]'
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "-caPath=/etc/onos/certs/tls.cacrt"
            - "-keyPath=/etc/onos/certs/tls.key"
            - "-certPath=/etc/onos/certs/tls.crt"
            - "-onosricaddr={{ .Values.onosricaddr }}"
            - "-enableMetrics={{ .Values.enableMetrics }}"
            - "-threshold=1"
          livenessProbe:
            exec:
              command:
                - /bin/sh
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            exec:
              command:
                - /bin/sh
            initialDelaySeconds: 5
            periodSeconds: 5
          volumeMounts:
            - name: secret
              mountPath: /etc/onos/certs
              readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: secret
          secret:
            secretName: {{ template "onos-ric-mlb.fullname" . }}-secret
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
