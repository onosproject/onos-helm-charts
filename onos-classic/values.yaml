# SPDX-FileCopyrightText: 2022 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: Apache-2.0

---
nameOverride: ""

image:
  repository: onosproject/onos
  tag: 2.5.7-rc1
  pullPolicy: IfNotPresent
  pullSecrets: []

replicas: 3
java_opts: -Xmx4G -Dlog4j2.formatMsgNoLookups=true
probe_timeout: 5
apps:
- org.onosproject.openflow-base

atomix:
  replicas: 3

podAntiAffinity:
  enabled: true

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10

resources:
  requests:
    cpu: 0.5
    memory: 512Mi
  limits:
    cpu: ~
    memory: ~

individualOpenFlowNodePorts: false

# Adds an additional nodeport to allow profiler connection.
# When false, profiler can still connect through proxy/port-forward
profiler:
  exposeNodePort: false

ports:
  - name: openflow
    port: 6653
  - name: ovsdb
    port: 6640
  - name: east-west
    port: 9876
  - name: cli
    port: 8101
  - name: ui
    port: 8181

# logging:
#   karafVersion: 4.2.14
#   config: |
#     # Just an example. See org.ops4j.pax.logging.cfg for details.
#
#     log4j2.rootLogger.level = DEBUG
#
#     log4j2.rootLogger.appenderRef.Console.ref = Console
#     log4j2.appender.console.type = Console
#     log4j2.appender.console.name = Console
#     log4j2.appender.console.layout.type = PatternLayout
#     log4j2.appender.console.layout.pattern = %d{RFC3339} %-5level [%c{1}] %msg%n%throwable
#
app_label: onos-classic


# onos configuration
# used in the job "onos-config-loader"
config:
  reconcile_mode: true
  reconcile_interval: 30s
  image:
    registry: ""
    repository: opencord/onos-classic-helm-utils
    tag: 0.1.0
    pullPolicy: "IfNotPresent"
  service_account_name: onos-config-loader
  # NOTE that these values won't change the configuration in the ONOS container, they are only used in the script that loads the config
  username: karaf
  password: karaf
  # netcfg is a JSON object that will be sent via POST to /onos/v1/network/configuration/
  #netcfg: >
  #  {}
  # componentConfig is a map containing "component-name": "json config" that will be iterated over and sent via POST to /onos/v1/configuration/<component-name>/
  # componentConfig:
  #   "org.onosproject.provider.lldp.impl.LldpLinkProvider": >
  #     {
  #       "enabled": "false"
  #     }

podsecuritypolicy:
  enabled: false
